loadrt trivkins 
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES 
loadrt probe_parport 
loadrt hostmot2
loadrt hm2_pci config="firmware=hm2/5i20/SVST8_4IM2.BIT num_encoders=4 num_pwmgens=4 num_stepgens=0" 

setp hm2_5i20.0.pwmgen.pwm_frequency 100000
setp hm2_5i20.0.pwmgen.pdm_frequency 100000
setp hm2_5i20.0.watchdog.timeout_ns 10000000

loadrt classicladder_rt numPhysInputs=15 numPhysOutputs=15 numS32in=10 numS32out=10 numFloatIn=10 numFloatOut=10

# spindle1 is a real-time component to handle spindle motor scaling for 
#  different gears.
loadrt spindle1 num_chan=1 gears=[SPINDLE_GEARS]NUM_GEARS
addf spindle1.0 servo-thread

addf hm2_5i20.0.read servo-thread
addf motion-command-handler servo-thread
addf motion-controller servo-thread
loadrt pid num_chan=4
addf pid.0.do-pid-calcs servo-thread
addf pid.1.do-pid-calcs servo-thread
addf pid.2.do-pid-calcs servo-thread
addf pid.3.do-pid-calcs servo-thread
addf pid.4.do-pid-calcs servo-thread
addf pid.5.do-pid-calcs servo-thread
addf pid.6.do-pid-calcs servo-thread
alias pin    pid.4.Pgain         pid.x.Pgain
alias pin    pid.4.Igain         pid.x.Igain
alias pin    pid.4.Dgain         pid.x.Dgain
alias pin    pid.4.bias          pid.x.bias
alias pin    pid.4.FF0           pid.x.FF0
alias pin    pid.4.FF1           pid.x.FF1
alias pin    pid.4.FF2           pid.x.FF2
alias pin    pid.4.deadband      pid.x.deadband
alias pin    pid.4.maxoutput     pid.x.maxoutput
alias pin    pid.4.enable        pid.x.enable
alias pin    pid.4.command       pid.x.command
alias pin    pid.4.feedback      pid.x.feedback
alias pin    pid.4.output        pid.x.output
alias pin    pid.4.index-enable  pid.x.index-enable
alias pin    pid.4.error         pid.x.error

alias pin    pid.5.Pgain         pid.y.Pgain
alias pin    pid.5.Igain         pid.y.Igain
alias pin    pid.5.Dgain         pid.y.Dgain
alias pin    pid.5.bias          pid.y.bias
alias pin    pid.5.FF0           pid.y.FF0
alias pin    pid.5.FF1           pid.y.FF1
alias pin    pid.5.FF2           pid.y.FF2
alias pin    pid.5.deadband      pid.y.deadband
alias pin    pid.5.maxoutput     pid.y.maxoutput
alias pin    pid.5.enable        pid.y.enable
alias pin    pid.5.command       pid.y.command
alias pin    pid.5.feedback      pid.y.feedback
alias pin    pid.5.output        pid.y.output
alias pin    pid.5.index-enable  pid.y.index-enable
alias pin    pid.5.error         pid.y.error

alias pin    pid.6.Pgain         pid.z.Pgain
alias pin    pid.6.Igain         pid.z.Igain
alias pin    pid.6.Dgain         pid.z.Dgain
alias pin    pid.6.bias          pid.z.bias
alias pin    pid.6.FF0           pid.z.FF0
alias pin    pid.6.FF1           pid.z.FF1
alias pin    pid.6.FF2           pid.z.FF2
alias pin    pid.6.deadband      pid.z.deadband
alias pin    pid.6.maxoutput     pid.z.maxoutput
alias pin    pid.6.enable        pid.z.enable
alias pin    pid.6.command       pid.z.command
alias pin    pid.6.feedback      pid.z.feedback
alias pin    pid.6.output        pid.z.output
alias pin    pid.6.index-enable  pid.z.index-enable
alias pin    pid.6.error         pid.z.error

addf classicladder.0.refresh servo-thread
addf hm2_5i20.0.write         servo-thread
addf hm2_5i20.0.pet_watchdog  servo-thread

# --- COOLANT-MIST ---
    setp hm2_5i20.0.gpio.065.is_output true
net coolant-mist     =>  hm2_5i20.0.gpio.065.out
# --- SPINDLE-CCW ---
    setp hm2_5i20.0.gpio.066.is_output true
    setp hm2_5i20.0.gpio.066.invert_output true
# --- COOLANT-FLOOD ---
    setp hm2_5i20.0.gpio.067.is_output true
net coolant-flood     =>  hm2_5i20.0.gpio.067.out
# --- SPINDLE-CW ---
    setp hm2_5i20.0.gpio.068.is_output true
    setp hm2_5i20.0.gpio.068.invert_output true


#*******************
#  AXIS X
#*******************

    setp pid.x.Pgain     [AXIS_0]P
    setp pid.x.Igain     [AXIS_0]I
    setp pid.x.Dgain     [AXIS_0]D
    setp pid.x.bias      [AXIS_0]BIAS
    setp pid.x.FF0       [AXIS_0]FF0
    setp pid.x.FF1       [AXIS_0]FF1
    setp pid.x.FF2       [AXIS_0]FF2
    setp pid.x.deadband  [AXIS_0]DEADBAND
    setp pid.x.maxoutput [AXIS_0]MAX_OUTPUT
net x-index-enable  <=>  pid.x.index-enable

# PWM Generator signals/setup

setp hm2_5i20.0.pwmgen.00.output-type 1
setp hm2_5i20.0.pwmgen.00.scale  [AXIS_0]OUTPUT_SCALE
net xenable     => pid.x.enable
net xoutput     pid.x.output           => hm2_5i20.0.pwmgen.00.value
net xpos-cmd    axis.0.motor-pos-cmd   => pid.x.command
net xenable     axis.0.amp-enable-out  => hm2_5i20.0.pwmgen.00.enable

# ---Encoder feedback signals/setup---

setp hm2_5i20.0.encoder.00.counter-mode 0
setp hm2_5i20.0.encoder.00.filter 1
setp hm2_5i20.0.encoder.00.index-invert 0
setp hm2_5i20.0.encoder.00.index-mask 0
setp hm2_5i20.0.encoder.00.index-mask-invert 0
setp hm2_5i20.0.encoder.00.scale  [AXIS_0]INPUT_SCALE
net xpos-fb               <=  hm2_5i20.0.encoder.00.position
net xpos-fb               =>  pid.x.feedback
net xpos-fb               =>  axis.0.motor-pos-fb
net x-index-enable    axis.0.index-enable  <=>  hm2_5i20.0.encoder.00.index-enable

#*******************
#  AXIS Y
#*******************

setp pid.y.Pgain     [AXIS_1]P
setp pid.y.Igain     [AXIS_1]I
setp pid.y.Dgain     [AXIS_1]D
setp pid.y.bias      [AXIS_1]BIAS
setp pid.y.FF0       [AXIS_1]FF0
setp pid.y.FF1       [AXIS_1]FF1
setp pid.y.FF2       [AXIS_1]FF2
setp pid.y.deadband  [AXIS_1]DEADBAND
setp pid.y.maxoutput [AXIS_1]MAX_OUTPUT
net y-index-enable  <=>  pid.y.index-enable

# PWM Generator signals/setup

setp hm2_5i20.0.pwmgen.01.output-type 1
setp hm2_5i20.0.pwmgen.01.scale  [AXIS_1]OUTPUT_SCALE
net yenable     => pid.y.enable
net youtput     pid.y.output           => hm2_5i20.0.pwmgen.01.value
net ypos-cmd    axis.1.motor-pos-cmd   => pid.y.command
net yenable     axis.1.amp-enable-out  => hm2_5i20.0.pwmgen.01.enable

# ---Encoder feedback signals/setup---

setp hm2_5i20.0.encoder.01.counter-mode 0
setp hm2_5i20.0.encoder.01.filter 1
setp hm2_5i20.0.encoder.01.index-invert 0
setp hm2_5i20.0.encoder.01.index-mask 0
setp hm2_5i20.0.encoder.01.index-mask-invert 0
setp hm2_5i20.0.encoder.01.scale  [AXIS_1]INPUT_SCALE
net ypos-fb               <=  hm2_5i20.0.encoder.01.position
net ypos-fb               =>  pid.y.feedback
net ypos-fb               =>  axis.1.motor-pos-fb
net y-index-enable    axis.1.index-enable  <=>  hm2_5i20.0.encoder.01.index-enable

#*******************
#  AXIS Z
#*******************

setp pid.z.Pgain     [AXIS_2]P
setp pid.z.Igain     [AXIS_2]I
setp pid.z.Dgain     [AXIS_2]D
setp pid.z.bias      [AXIS_2]BIAS
setp pid.z.FF0       [AXIS_2]FF0
setp pid.z.FF1       [AXIS_2]FF1
setp pid.z.FF2       [AXIS_2]FF2
setp pid.z.deadband  [AXIS_2]DEADBAND
setp pid.z.maxoutput [AXIS_2]MAX_OUTPUT
net z-index-enable  <=>  pid.z.index-enable

# PWM Generator signals/setup

setp hm2_5i20.0.pwmgen.02.output-type 1
setp hm2_5i20.0.pwmgen.02.scale  [AXIS_2]OUTPUT_SCALE
net zenable     => pid.z.enable
net zoutput     pid.z.output           => hm2_5i20.0.pwmgen.02.value
net zpos-cmd    axis.2.motor-pos-cmd   => pid.z.command
net zenable     axis.2.amp-enable-out  => hm2_5i20.0.pwmgen.02.enable

# ---Encoder feedback signals/setup---

    setp hm2_5i20.0.encoder.02.counter-mode 0
    setp hm2_5i20.0.encoder.02.filter 1
    setp hm2_5i20.0.encoder.02.index-invert 0
    setp hm2_5i20.0.encoder.02.index-mask 0
    setp hm2_5i20.0.encoder.02.index-mask-invert 0
    setp hm2_5i20.0.encoder.02.scale  [AXIS_2]INPUT_SCALE
net zpos-fb               <=  hm2_5i20.0.encoder.02.position
net zpos-fb               =>  pid.z.feedback
net zpos-fb               =>  axis.2.motor-pos-fb
net z-index-enable    axis.2.index-enable  <=>  hm2_5i20.0.encoder.02.index-enable

#*******************
#  SPINDLE S
#*******************

setp spindle1.0.scale.0 <= [SPINDLE_GEARS]RATIO_1
setp spindle1.0.scale.1 <= [SPINDLE_GEARS]RATIO_2
setp spindle1.0.scale.2 <= [SPINDLE_GEARS]RATIO_3
setp spindle1.0.scale.3 <= [SPINDLE_GEARS]RATIO_4
setp spindle1.0.scale.4 <= [SPINDLE_GEARS]RATIO_5
setp spindle1.0.scale.5 <= [SPINDLE_GEARS]RATIO_6
setp spindle1.0.scale.6 <= [SPINDLE_GEARS]RATIO_7
setp spindle1.0.scale.7 <= [SPINDLE_GEARS]RATIO_8
setp spindle1.0.scale.8 <= [SPINDLE_GEARS]RATIO_9
setp spindle1.0.scale.9 <= [SPINDLE_GEARS]RATIO_10

# PWM Generator signals/setup

setp hm2_5i20.0.pwmgen.03.output-type 1
setp hm2_5i20.0.pwmgen.03.scale [SPINDLE_9]OUTPUT_SCALE

# ---Encoder feedback signals/setup---

setp hm2_5i20.0.encoder.03.counter-mode 0
setp hm2_5i20.0.encoder.03.filter 1
setp hm2_5i20.0.encoder.03.index-invert 0
setp hm2_5i20.0.encoder.03.index-mask 0
setp hm2_5i20.0.encoder.03.index-mask-invert 0
setp hm2_5i20.0.encoder.03.scale <= [SPINDLE_9]INPUT_SCALE

# spindle1 hal component sits between the motion controller and
#  the spindle motor drive and encoder, and scales the encoder 
#  position and velocity by the gear ratio.

# Low-pass filter on encoder output.
setp spindle1.0.spindle-lpf 1

# Connections from motion to spindle1
net spindle-enc-fb <= hm2_5i20.0.encoder.03.velocity => spindle1.0.actual-speed
net spindle-enc-revs <= hm2_5i20.0.encoder.03.position => spindle1.0.spindle-pos-in
net spindle-enable <= motion.spindle-on => spindle1.0.enable
net spindle-vel-cmd-rps <= motion.spindle-speed-out => spindle1.0.commanded-speed

# Connections from spindle1 to motion
net spindle-vel-fb <= spindle1.0.spindle-rpm => motion.spindle-speed-in
net spindle-revs <= spindle1.0.spindle-pos-out => motion.spindle-revs
net spindle-at-speed spindle1.0.at-speed => motion.spindle-at-speed

# Connections from spindle1 to the VFD. The VFD enable input is wired TRUE,
#  otherwise it takes a long time to coast a stop.
net spindle-vel-output <= spindle1.0.output => hm2_5i20.0.pwmgen.03.value
net spindle-forward spindle1.0.forward => hm2_5i20.0.gpio.068.out
net spindle-reverse spindle1.0.reverse => hm2_5i20.0.gpio.066.out

# Index does not go through spindle1
net spindle-index-enable motion.spindle-index-enable <=> hm2_5i20.0.encoder.03.index-enable

# ---setup spindle control signals---
#net spindle-brake          <=  motion.spindle-brake

# The spindle1 hal component handles gear changes and motor input and output
#  scaling. select-gear is set here to the default gear before changed by the control panel
#  and sometimes by gcode.
net spindle-gear spindle1.0.select-gear 5

#******************************
# connect miscellaneous signals
#******************************

#  ---coolant signals---

net coolant-mist      <=  iocontrol.0.coolant-mist
net coolant-flood     <=  iocontrol.0.coolant-flood

#  ---probe signal---

net probe-in     =>  motion.probe-input

#  ---digital in / out signals---

net dout-00     <=  motion.digital-out-00
net dout-01     <=  motion.digital-out-01
net dout-02     <=  motion.digital-out-02
net dout-03     <=  motion.digital-out-03
#  ---estop signals---

net estop-out     <=  iocontrol.0.user-enable-out

# **** Setup for external estop ladder program -START ****

net estop-out     => classicladder.0.in-00
net estop-ext     => classicladder.0.in-01
net estop-strobe     classicladder.0.in-02   <=  iocontrol.0.user-request-enable
net estop-outcl      classicladder.0.out-00  =>  iocontrol.0.emc-enable-in

# **** Setup for external estop ladder program -END ****

#  ---manual tool change signals---

loadusr -W hal_manualtoolchange
net tool-change-request     iocontrol.0.tool-change       =>  hal_manualtoolchange.change
net tool-change-confirmed   iocontrol.0.tool-changed      <=  hal_manualtoolchange.changed
net tool-number             iocontrol.0.tool-prep-number  =>  hal_manualtoolchange.number
net tool-prepare-loopback   iocontrol.0.tool-prepare      =>  iocontrol.0.tool-prepared


# Load Classicladder with modbus master included (GUI must run for Modbus)

loadusr classicladder --modmaster custom.clp
